<StyleCopViolations>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" RuleId="SA1208">System using directives must be placed before all other using directives.</Violation>
  <Violation LineNumber="6" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="8" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="8" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="12" StartLine="12" StartColumn="14" EndLine="12" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'App.' or 'Application.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="15" StartLine="15" StartColumn="14" EndLine="15" EndColumn="21" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to MainPage must begin with the 'this.', 'base.', 'object.' or 'App.' or 'Application.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="18" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="23" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="28" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/App.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhonewordBlankPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhonewordBlankPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhonewordBlankPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="7" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhonewordBlankPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="9" StartLine="9" StartColumn="14" EndLine="9" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhonewordBlankPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'PhonewordBlankPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="18" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="2" EndLine="25" EndColumn="39" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="26" StartLine="26" StartColumn="2" EndLine="26" EndColumn="34" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="6" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="12" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="12" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="12" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotBeginWithUnderscore" RuleId="SA1309">Field names must not start with an underscore.</Violation>
  <Violation LineNumber="14" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="14" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotBeginWithUnderscore" RuleId="SA1309">Field names must not start with an underscore.</Violation>
  <Violation LineNumber="17" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="17" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all fields.</Violation>
  <Violation LineNumber="51" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all events.</Violation>
  <Violation LineNumber="53" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="18" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="19" StartLine="19" StartColumn="25" EndLine="19" EndColumn="38" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _someViewModel must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="23" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="25" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="AllAccessorsMustBeMultiLineOrSingleLine" RuleId="SA1504">An accessor can only be placed on a single line if all of the accessors in the property are placed on a single line.</Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="27" EndLine="25" EndColumn="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _userName must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="28" StartLine="28" StartColumn="18" EndLine="28" EndColumn="26" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _userName must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="29" StartLine="29" StartColumn="18" EndLine="29" EndColumn="34" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to OnPropertyChanged must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="33" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotBeginWithUnderscore" RuleId="SA1309">Field names must not start with an underscore.</Violation>
  <Violation LineNumber="36" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="36" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="40" StartLine="40" StartColumn="25" EndLine="40" EndColumn="36" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _displayText must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="45" StartLine="45" StartColumn="18" EndLine="45" EndColumn="29" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _displayText must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="46" StartLine="46" StartColumn="34" EndLine="46" EndColumn="45" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to _displayText must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="47" StartLine="47" StartColumn="18" EndLine="47" EndColumn="34" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to OnPropertyChanged must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="51" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The event must have a documentation header.</Violation>
  <Violation LineNumber="53" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="64" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All constructor parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="64" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the constructor parameters are on separate lines, the first parameter must begin on the line beneath the name of the constructor.</Violation>
  <Violation LineNumber="64" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="56" StartLine="56" StartColumn="14" EndLine="56" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to StatusChangeCommand must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="61" StartLine="61" StartColumn="14" EndLine="61" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="70" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="70" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="72" StartLine="72" StartColumn="14" EndLine="72" EndColumn="29" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="76" StartLine="76" StartColumn="46" EndLine="76" EndColumn="61" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="73" StartLine="73" StartColumn="45" EndLine="73" EndColumn="60" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="85" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="85" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="89" StartLine="89" StartColumn="46" EndLine="89" EndColumn="61" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="100" StartLine="100" StartColumn="43" EndLine="100" EndColumn="58" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="102" StartLine="102" StartColumn="34" EndLine="102" EndColumn="49" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to translatedNumber must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="107" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="107" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="112" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="112" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="117" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="117" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="119" StartLine="119" StartColumn="28" EndLine="119" EndColumn="42" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to PropertyChanged must begin with the 'this.', 'base.', 'object.' or 'MainPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="126" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="126" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="128" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="126" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="132" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="132" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="132" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="132" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation LineNumber="134" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="134" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation LineNumber="136" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="136" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="136" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotBeginWithUnderscore" RuleId="SA1309">Field names must not start with an underscore.</Violation>
  <Violation LineNumber="137" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="137" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="137" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="149" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="156" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all events.</Violation>
  <Violation LineNumber="138" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="139" StartLine="139" StartColumn="25" EndLine="139" EndColumn="36" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to _displayText must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="142" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="143" StartLine="143" StartColumn="18" EndLine="143" EndColumn="29" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to _displayText must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="144" StartLine="144" StartColumn="34" EndLine="144" EndColumn="45" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to _displayText must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="145" StartLine="145" StartColumn="18" EndLine="145" EndColumn="34" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to OnPropertyChanged must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="149" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="149" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="150" StartLine="150" StartColumn="14" EndLine="150" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to StatusChangeCommand must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="156" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The event must have a documentation header.</Violation>
  <Violation LineNumber="158" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="158" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="160" StartLine="160" StartColumn="28" EndLine="160" EndColumn="42" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/MainPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to PropertyChanged must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="7" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="18" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="23" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="26" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the else statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="24" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="28" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="StaticReadonlyFieldsMustBeginWithUpperCaseLetter" RuleId="SA1311">Static readonly fields must start with an upper-case letter: digits.</Violation>
  <Violation LineNumber="41" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="46" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="47" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="41" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/PhoneTranslator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IDialer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="3" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IDialer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The interface must have a documentation header.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IDialer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="8" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="12" StartLine="12" StartColumn="14" EndLine="12" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CallHistoryPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="16" StartLine="16" StartColumn="20" EndLine="16" EndColumn="31" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CallHistoryPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to DisplayAlert must begin with the 'this.', 'base.', 'object.' or 'CallHistoryPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="9" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="11" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="17" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="22" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="13" StartLine="13" StartColumn="14" EndLine="13" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'TestTabbedPage.' or 'TabbedPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="15" StartLine="15" StartColumn="14" EndLine="15" EndColumn="24" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to ItemsSource must begin with the 'this.', 'base.', 'object.' or 'TestTabbedPage.' or 'TabbedPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="31" StartLine="31" StartColumn="14" EndLine="31" EndColumn="25" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to DisplayAlert must begin with the 'this.', 'base.', 'object.' or 'TestTabbedPage.' or 'TabbedPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="34" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="41" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="41" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation LineNumber="43" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="44" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="44" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="45" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="45" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/TestTabbedPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="7" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="9" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="14" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="18" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'int' rather than Int32 or System.Int32.</Violation>
  <Violation LineNumber="20" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'int' rather than Int32 or System.Int32.</Violation>
  <Violation LineNumber="22" StartLine="22" StartColumn="28" EndLine="22" EndColumn="33" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Triple must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="26" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="28" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'int' rather than Int32 or System.Int32.</Violation>
  <Violation LineNumber="28" StartLine="28" StartColumn="31" EndLine="28" EndColumn="36" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Triple must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="33" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="33" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/IntStrToBoolStrConverter.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomCell.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomCell.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomCell.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="4" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomCell.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="6" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomCell.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="8" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="10" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="12" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="14" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="15" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="19" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="14" StartLine="14" StartColumn="14" EndLine="14" EndColumn="23" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Characters must begin with the 'this.', 'base.', 'object.' or 'ListingPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="14" EndLine="25" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'ListingPage.' or 'ContentPage.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation LineNumber="30" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FileMayOnlyContainASingleClass" RuleId="SA1402">A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</Violation>
  <Violation LineNumber="31" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="35" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="37" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="60" StartLine="60" StartColumn="14" EndLine="60" EndColumn="17" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to View must begin with the 'this.', 'base.', 'object.' or 'ViewCellCustom.' or 'ViewCell.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="39" StartLine="39" StartColumn="14" EndLine="39" EndColumn="44" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="45" StartLine="45" StartColumn="14" EndLine="45" EndColumn="27" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="49" StartLine="49" StartColumn="14" EndLine="49" EndColumn="48" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="56" StartLine="56" StartColumn="14" EndLine="56" EndColumn="46" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/ListingPage.xaml.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="7" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="25" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="9" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="19" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="19" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">property names begin with an upper-case letter: charName.</Violation>
  <Violation LineNumber="26" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="22" StartLine="22" StartColumn="20" EndLine="22" EndColumn="27" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to SetValue must begin with the 'this.', 'base.', 'object.' or 'CustomViewCell.' or 'ViewCell.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="26" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="28" StartLine="28" StartColumn="14" EndLine="28" EndColumn="32" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'CustomViewCell.' or 'ViewCell.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="31" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="37" StartLine="37" StartColumn="34" EndLine="37" EndColumn="41" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to charName must begin with the 'this.', 'base.', 'object.' or 'CustomViewCell.' or 'ViewCell.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="35" StartLine="35" StartColumn="18" EndLine="35" EndColumn="31" Source="/Users/constantp/Documents/Xamarin Practice/PhonewordBlank/PhonewordBlank/CustomViewCell.xaml.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to BindingContext must begin with the 'this.', 'base.', 'object.' or 'CustomViewCell.' or 'ViewCell.' prefix to indicate the intended method call. </Violation>
</StyleCopViolations>